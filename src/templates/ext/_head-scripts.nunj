{% macro headScripts() %}
	<script type="text/javascript">
		;(function(){
			var modificators = [],
				nv = navigator,
				pl = nv.platform.toLowerCase(),
				ua = nv.userAgent.toLowerCase(),
				an = nv.appName.toLowerCase(),
				htmlElement = document.documentElement,
				ls = localStorage;

			function pli(s){return pl.indexOf(s) > -1;}
			function uai(s){return ua.indexOf(s) > -1;}
			function ani(s){return an.indexOf(s) > -1;}

			// Platform
			var platformClass = uai('iphone') || uai('ipod') || uai('ipad') || uai('android') || uai('iemobile') || uai('blackberry') || uai('bada') ? '_mobile' : '_desktop';
			modificators.push(platformClass);

			// OS
			var osClass = '';
			if (uai('ipad') || uai('iphone') || uai('ipod')) {
				osClass = '_ios';
			} else if (uai('android')) {
				osClass = '_android';
			} else if (pli('win')) {
				osClass = '_win';
			} else if (pli('mac')) {
				osClass = '_mac';
			} else if (pli('linux')) {
				osClass = '_linux';
			}
			modificators.push(osClass);

			// Browser
			var browserClass = '';
			if (uai('firefox')) {
				browserClass = '_ff';
			} else if (uai('opr')) {
				browserClass = '_opera';
			} else if (uai('yabrowser')) {
				browserClass = '_yandex';
			} else if (uai('edge')) {
				browserClass = '_edge';
			} else if (uai('trident') || ani('explorer') || ani('msie')) {
				browserClass = '_ie';
			} else if (uai('safari') && !uai('chrome')) {
				browserClass = '_safari';
			} else if (uai('chrome')) {
				browserClass = '_chrome';
			}
			modificators.push(browserClass);

			window.environmentObject = {
				platform: platformClass,
				os: osClass,
				browser: browserClass,
				isLocal: window.location.href.indexOf('http://localhost:') == 0
			};
			htmlElement.className += ' ' + modificators.join(' ');

			// SVG sprites
			var xhr = new XMLHttpRequest();
			xhr.open('GET', 'assets/svg/sprite.svg', true);
			xhr.overrideMimeType('image/svg+xml');

			xhr.onreadystatechange = function(){
				if(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
					function waitForBody(){
						if(document.body){
							var containerClass = 'invisible-container';
							var container = document.querySelector('.'+containerClass);
							if(!container){
								container = document.createElement('div');
								container.className = containerClass;
								document.body.insertBefore(container, document.body.firstChild);
							}
							container.appendChild(xhr.responseXML.documentElement);
						} else {
							setTimeout(waitForBody, 16);
						}
					}

					waitForBody();
				};
			}

			xhr.send('');
		})();

		function recountItem(elem, count) {
		  var priceElement = elem.parentNode.nextElementSibling.id;
			var itemSum = document.getElementById(priceElement).dataset.price * count;
			document.getElementById(priceElement).innerHTML = "$ " + itemSum;
			recountAll();
		}

		function recountAll() {
			var basketItems = Array.from(document.getElementsByClassName('basket__item'));
			var subtotal = 0;
			var totalCount = 0;
			basketItems.forEach(function (item) {
    		var itemTotal = item.getElementsByClassName('basket__price')[0].getAttribute('data-price') * item.getElementsByClassName('product-counter__input')[0].value;
				subtotal += itemTotal;
				totalCount +=  Number.parseInt(item.getElementsByClassName('product-counter__input')[0].value);
			});
			document.getElementById('header__cart-info').innerHTML = totalCount;
			document.getElementById('basketSubTotal').innerHTML = "$" + subtotal;
			var tax = document.getElementById('basketTax').dataset.price;
			var shipping = document.getElementById('basketShipping').dataset.price;
			var total = subtotal + Number.parseInt(tax) + Number.parseInt(shipping);
			if (subtotal > 0) {
				document.getElementById('basketTotal').innerHTML = "$" + total;
			}
			else {
				document.getElementById('basketTotal').innerHTML = "$" + 0;
			}
		}

		function removebasketItem(element) {
		  element.parentNode.remove();
			recountAll();
		}

		function increaseCountBasketItem(element) {
		  var counterId = element.previousElementSibling.id;
			var count = ++document.getElementById(counterId).value;
			recountItem(element, count);
		}

		function decreaseCountBasketItem(element) {
		  var counterId = element.nextElementSibling.id;
			if( document.getElementById(counterId).value > 0) {
				var count = --document.getElementById(counterId).value;
				recountItem(element, count);
			}
		}

		function changeCountBasketItem(element) {
			var count = element.value;
			recountItem(element, count);
			console.log(element, count);
		}

	</script>
{% endmacro %}
